---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    ansible.builtin.apt:
      name: "{{ packages }}"
      state: present
      update_cache: true
    vars:
      packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

  - name: Configure Kubernetes Network
    block:
      - name: Add modules of kernel for K8S
        ansible.builtin.blockinfile:
          path: /etc/modules-load.d/crio.conf
          block: |
            overlay
            br_netfilter
          create: true
          mode: 0644

      - name: Ensure Network modules
        community.general.modprobe:
          name: "{{ item }}"
          state: present
        loop:
          - overlay
          - br_netfilter

      - name: Configuration IPTables for CRI-O and K8S
        ansible.builtin.blockinfile:
          path: /etc/sysctl.d/99-kubernetes-cri.conf
          block: |
            net.bridge.bridge-nf-call-iptables  = 1
            net.ipv4.ip_forward                 = 1
            net.bridge.bridge-nf-call-ip6tables = 1
          create: true
          mode: 0644
        register: iptables

      - name: Sysctl --system
        ansible.builtin.command: sysctl --system
        when: iptables is changed

  - name: Install CRI-O
    block:
      - name: CRI-O apt key
        ansible.builtin.apt_key:
          url: "https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.25/Debian_11/Release.key"
          keyring: "/etc/apt/trusted.gpg.d/libcontainers.gpg"

      - name: CRI-O repository
        ansible.builtin.apt_repository:
          repo: "{{ item.repo }}"
          filename: "{{ item.filename }}"
          state: present
        loop:
          - { repo: 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_os_release }}/ /', filename: 'devel:kubic:libcontainers:stable.list' }
          - { repo: 'deb http://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/{{ crio_version }}/{{ crio_os_release }}/ /', filename: 'devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}.list'}

      - name: Install CRI-O
        ansible.builtin.apt:
          name: "{{ packages }}"
          state: present
          update_cache: true
        vars:
          packages:
            - cri-o
            - cri-o-runc

      - name: Start service CRI-O
        ansible.builtin.service:
          name: crio
          daemon_reload: true
          state: started
          enabled: true

  - name: Remove swapfile from /etc/fstab
    ansible.posix.mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    loop:
      - swap
      - none

  - name: Disable swap
    ansible.builtin.command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    ansible.builtin.apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Install Kubernetes
    block:
      - name: Adding apt repository for Kubernetes
        ansible.builtin.apt_repository:
          repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
          state: present
          filename: kubernetes.list

      - name: Install Kubernetes binaries
        ansible.builtin.apt:
          name: "{{ packages }}"
          state: present
          update_cache: true
        vars:
          packages:
            - kubelet={{ kubernetes_release }}-00
            - kubeadm={{ kubernetes_release }}-00
            - kubectl={{ kubernetes_release }}-00

      - name: Configure kubelet
        ansible.builtin.lineinfile:
          path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
          line: Environment="KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"

      - name: Restart kubelet
        ansible.builtin.service:
          name: kubelet
          daemon_reload: true
          state: restarted

      - name: Apt Hold kubernetes packages
        ansible.builtin.dpkg_selections:
          name: "{{ item }}"
          selection: hold
        loop:
          - kubelet
          - kubeadm
          - kubectl
          - crio
          - cri-o-runc

  - name: Token Join for worker nodes
    block:
      - name: Copy the join command to server location
        ansible.builtin.copy:
          src: join-command
          dest: /tmp/join-command.sh 
          mode: 0777
        register: token_kubeadm

      - name: Join the node to cluster
        ansible.builtin.command: sh /tmp/join-command.sh
        when: token_kubeadm is changed
